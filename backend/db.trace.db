2024-10-23 13:16:35.482079+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "USUARIOS" ya existe
Table "USUARIOS" already exists; SQL statement:
create table usuarios (id bigint generated by default as identity, email varchar(255) not null unique, nombre varchar(255) not null, password varchar(255) not null, primary key (id)) [42101-224]
2024-10-23 13:19:08.594847+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "USUARIOS" ya existe
Table "USUARIOS" already exists; SQL statement:
create table usuarios (id bigint generated by default as identity, email varchar(255) not null unique, nombre varchar(255) not null, password varchar(255) not null, primary key (id)) [42101-224]
2024-10-23 13:22:28.436246+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "USUARIOS" ya existe
Table "USUARIOS" already exists; SQL statement:
create table usuarios (id bigint generated by default as identity, email varchar(255) not null unique, nombre varchar(255) not null, password varchar(255) not null, primary key (id)) [42101-224]
2024-10-23 13:24:21.942580+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "USUARIOS" ya existe
Table "USUARIOS" already exists; SQL statement:
create table usuarios (id bigint generated by default as identity, email varchar(255) not null unique, nombre varchar(255) not null, password varchar(255) not null, primary key (id)) [42101-224]
2024-10-23 13:24:46.145643+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "USUARIOS" ya existe
Table "USUARIOS" already exists; SQL statement:
create table usuarios (id bigint generated by default as identity, email varchar(255) not null unique, nombre varchar(255) not null, password varchar(255) not null, primary key (id)) [42101-224]
2024-10-23 13:25:26.955910+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "USUARIOS" ya existe
Table "USUARIOS" already exists; SQL statement:
create table usuarios (id bigint generated by default as identity, email varchar(255) not null unique, nombre varchar(255) not null, password varchar(255) not null, primary key (id)) [42101-224]
2024-10-23 13:27:02.598580+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "USUARIOS" ya existe
Table "USUARIOS" already exists; SQL statement:
create table usuarios (id bigint generated by default as identity, email varchar(255) not null unique, nombre varchar(255) not null, password varchar(255) not null, primary key (id)) [42101-224]
2024-10-23 13:28:36.324604+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "USUARIOS" ya existe
Table "USUARIOS" already exists; SQL statement:
create table usuarios (id bigint generated by default as identity, email varchar(255) not null unique, nombre varchar(255) not null, password varchar(255) not null, primary key (id)) [42101-224]
2024-10-23 13:34:01.849235+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "USUARIOS" ya existe
Table "USUARIOS" already exists; SQL statement:
create table usuarios (id bigint generated by default as identity, email varchar(255) not null unique, nombre varchar(255) not null, password varchar(255) not null, primary key (id)) [42101-224]
2024-10-23 23:24:34.603021+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "USUARIOS" ya existe
Table "USUARIOS" already exists; SQL statement:
create table usuarios (id bigint generated by default as identity, email varchar(255) not null unique, nombre varchar(255) not null, password varchar(255) not null, primary key (id)) [42101-224]
2024-10-23 23:35:09.197739+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "USUARIOS" ya existe
Table "USUARIOS" already exists; SQL statement:
create table usuarios (id bigint generated by default as identity, email varchar(255) not null unique, nombre varchar(255) not null, password varchar(255) not null, primary key (id)) [42101-224]
2024-10-24 00:02:22.086996+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "USUARIOS" ya existe
Table "USUARIOS" already exists; SQL statement:
create table usuarios (id bigint generated by default as identity, email varchar(255) not null unique, nombre varchar(255) not null, password varchar(255) not null, primary key (id)) [42101-224]
2024-10-25 01:00:43.401884+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "USUARIOS" ya existe
Table "USUARIOS" already exists; SQL statement:
create table usuarios (id bigint generated by default as identity, email varchar(255) not null unique, nombre varchar(255) not null, password varchar(255) not null, primary key (id)) [42101-224]
2024-10-25 23:55:08.651690+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "USUARIOS" ya existe
Table "USUARIOS" already exists; SQL statement:
create table usuarios (id bigint generated by default as identity, email varchar(255) not null unique, nombre varchar(255) not null, password varchar(255) not null, primary key (id)) [42101-224]
2024-11-05 13:25:55.885178+01:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexi√≥n)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:690)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.message.DbException.get(DbException.java:188)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1425)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:465)
	at com.zaxxer.hikari.pool.HikariProxyConnection.getAutoCommit(HikariProxyConnection.java)
	at org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.determineInitialAutoCommitMode(AbstractLogicalConnectionImplementor.java:135)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.begin(LogicalConnectionManagedImpl.java:281)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.begin(JdbcResourceLocalTransactionCoordinatorImpl.java:232)
	at org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:83)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.beginTransaction(HibernateJpaDialect.java:176)
	at org.springframework.orm.jpa.JpaTransactionManager.doBegin(JpaTransactionManager.java:420)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.startTransaction(AbstractPlatformTransactionManager.java:531)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:405)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.createTransactionIfNecessary(TransactionAspectSupport.java:617)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:386)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy109.save(Unknown Source)
	at com.example.furbo.servicios.TeamService.loadTeamDetails(TeamService.java:111)
	at com.example.furbo.servicios.TeamService.loadAllTeams(TeamService.java:56)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:401)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:219)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:422)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1778)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1419)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.example.furbo.FurboApplication.main(FurboApplication.java:10)
2024-11-05 13:25:55.888176+01:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexi√≥n)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:690)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.message.DbException.get(DbException.java:188)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1425)
	at org.h2.jdbc.JdbcConnection.setAutoCommit(JdbcConnection.java:437)
	at com.zaxxer.hikari.pool.ProxyConnection.setAutoCommit(ProxyConnection.java:401)
	at com.zaxxer.hikari.pool.HikariProxyConnection.setAutoCommit(HikariProxyConnection.java)
	at org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.begin(AbstractLogicalConnectionImplementor.java:72)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.begin(LogicalConnectionManagedImpl.java:282)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.begin(JdbcResourceLocalTransactionCoordinatorImpl.java:232)
	at org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:83)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.beginTransaction(HibernateJpaDialect.java:176)
	at org.springframework.orm.jpa.JpaTransactionManager.doBegin(JpaTransactionManager.java:420)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.startTransaction(AbstractPlatformTransactionManager.java:531)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:405)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.createTransactionIfNecessary(TransactionAspectSupport.java:617)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:386)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy109.save(Unknown Source)
	at com.example.furbo.servicios.TeamService.loadTeamDetails(TeamService.java:111)
	at com.example.furbo.servicios.TeamService.loadAllTeams(TeamService.java:56)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:401)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:219)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:422)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1778)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1419)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.example.furbo.FurboApplication.main(FurboApplication.java:10)
2024-11-05 13:25:55.890680+01:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexi√≥n)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:690)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.message.DbException.get(DbException.java:188)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1425)
	at org.h2.jdbc.JdbcConnection.getWarnings(JdbcConnection.java:646)
	at com.zaxxer.hikari.pool.HikariProxyConnection.getWarnings(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.handleAndClearWarnings(SqlExceptionHelper.java:298)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logAndClearWarnings(SqlExceptionHelper.java:277)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.releaseConnection(LogicalConnectionManagedImpl.java:220)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.close(LogicalConnectionManagedImpl.java:258)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:161)
	at org.hibernate.internal.AbstractSharedSessionContract.close(AbstractSharedSessionContract.java:442)
	at org.hibernate.internal.SessionImpl.closeWithoutOpenChecks(SessionImpl.java:409)
	at org.hibernate.internal.SessionImpl.close(SessionImpl.java:391)
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:424)
	at org.springframework.orm.jpa.JpaTransactionManager.closeEntityManagerAfterFailedBegin(JpaTransactionManager.java:513)
	at org.springframework.orm.jpa.JpaTransactionManager.doBegin(JpaTransactionManager.java:465)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.startTransaction(AbstractPlatformTransactionManager.java:531)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:405)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.createTransactionIfNecessary(TransactionAspectSupport.java:617)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:386)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy109.save(Unknown Source)
	at com.example.furbo.servicios.TeamService.loadTeamDetails(TeamService.java:111)
	at com.example.furbo.servicios.TeamService.loadAllTeams(TeamService.java:56)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:401)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:219)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:422)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1778)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1419)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.example.furbo.FurboApplication.main(FurboApplication.java:10)
2024-11-05 13:25:55.892686+01:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexi√≥n)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:690)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.message.DbException.get(DbException.java:188)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1425)
	at org.h2.jdbc.JdbcConnection.clearWarnings(JdbcConnection.java:660)
	at com.zaxxer.hikari.pool.HikariProxyConnection.clearWarnings(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.handleAndClearWarnings(SqlExceptionHelper.java:307)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logAndClearWarnings(SqlExceptionHelper.java:277)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.releaseConnection(LogicalConnectionManagedImpl.java:220)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.close(LogicalConnectionManagedImpl.java:258)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:161)
	at org.hibernate.internal.AbstractSharedSessionContract.close(AbstractSharedSessionContract.java:442)
	at org.hibernate.internal.SessionImpl.closeWithoutOpenChecks(SessionImpl.java:409)
	at org.hibernate.internal.SessionImpl.close(SessionImpl.java:391)
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:424)
	at org.springframework.orm.jpa.JpaTransactionManager.closeEntityManagerAfterFailedBegin(JpaTransactionManager.java:513)
	at org.springframework.orm.jpa.JpaTransactionManager.doBegin(JpaTransactionManager.java:465)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.startTransaction(AbstractPlatformTransactionManager.java:531)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:405)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.createTransactionIfNecessary(TransactionAspectSupport.java:617)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:386)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy109.save(Unknown Source)
	at com.example.furbo.servicios.TeamService.loadTeamDetails(TeamService.java:111)
	at com.example.furbo.servicios.TeamService.loadAllTeams(TeamService.java:56)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:401)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:219)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:422)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1778)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1419)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.example.furbo.FurboApplication.main(FurboApplication.java:10)
2024-11-05 13:25:55.895682+01:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexi√≥n)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:690)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.message.DbException.get(DbException.java:188)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1425)
	at org.h2.jdbc.JdbcConnection.clearWarnings(JdbcConnection.java:660)
	at com.zaxxer.hikari.pool.ProxyConnection.close(ProxyConnection.java:257)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.closeConnection(DatasourceConnectionProviderImpl.java:127)
	at org.hibernate.internal.NonContextualJdbcConnectionAccess.releaseConnection(NonContextualJdbcConnectionAccess.java:64)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.releaseConnection(LogicalConnectionManagedImpl.java:224)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.close(LogicalConnectionManagedImpl.java:258)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:161)
	at org.hibernate.internal.AbstractSharedSessionContract.close(AbstractSharedSessionContract.java:442)
	at org.hibernate.internal.SessionImpl.closeWithoutOpenChecks(SessionImpl.java:409)
	at org.hibernate.internal.SessionImpl.close(SessionImpl.java:391)
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:424)
	at org.springframework.orm.jpa.JpaTransactionManager.closeEntityManagerAfterFailedBegin(JpaTransactionManager.java:513)
	at org.springframework.orm.jpa.JpaTransactionManager.doBegin(JpaTransactionManager.java:465)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.startTransaction(AbstractPlatformTransactionManager.java:531)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:405)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.createTransactionIfNecessary(TransactionAspectSupport.java:617)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:386)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy109.save(Unknown Source)
	at com.example.furbo.servicios.TeamService.loadTeamDetails(TeamService.java:111)
	at com.example.furbo.servicios.TeamService.loadAllTeams(TeamService.java:56)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:401)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:219)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:422)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1778)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1419)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.example.furbo.FurboApplication.main(FurboApplication.java:10)
2024-11-05 13:26:38.312612+01:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexi√≥n)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:690)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.message.DbException.get(DbException.java:188)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1425)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:465)
	at com.zaxxer.hikari.pool.HikariProxyConnection.getAutoCommit(HikariProxyConnection.java)
	at org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.determineInitialAutoCommitMode(AbstractLogicalConnectionImplementor.java:135)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.begin(LogicalConnectionManagedImpl.java:281)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.begin(JdbcResourceLocalTransactionCoordinatorImpl.java:232)
	at org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:83)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.beginTransaction(HibernateJpaDialect.java:176)
	at org.springframework.orm.jpa.JpaTransactionManager.doBegin(JpaTransactionManager.java:420)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.startTransaction(AbstractPlatformTransactionManager.java:531)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:405)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.createTransactionIfNecessary(TransactionAspectSupport.java:617)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:386)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy109.save(Unknown Source)
	at com.example.furbo.servicios.TeamService.loadTeamDetails(TeamService.java:111)
	at com.example.furbo.servicios.TeamService.loadAllTeams(TeamService.java:56)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:401)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:219)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:422)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1778)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1419)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.example.furbo.FurboApplication.main(FurboApplication.java:10)
2024-11-05 13:26:38.315611+01:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexi√≥n)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:690)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.message.DbException.get(DbException.java:188)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1425)
	at org.h2.jdbc.JdbcConnection.setAutoCommit(JdbcConnection.java:437)
	at com.zaxxer.hikari.pool.ProxyConnection.setAutoCommit(ProxyConnection.java:401)
	at com.zaxxer.hikari.pool.HikariProxyConnection.setAutoCommit(HikariProxyConnection.java)
	at org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.begin(AbstractLogicalConnectionImplementor.java:72)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.begin(LogicalConnectionManagedImpl.java:282)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.begin(JdbcResourceLocalTransactionCoordinatorImpl.java:232)
	at org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:83)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.beginTransaction(HibernateJpaDialect.java:176)
	at org.springframework.orm.jpa.JpaTransactionManager.doBegin(JpaTransactionManager.java:420)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.startTransaction(AbstractPlatformTransactionManager.java:531)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:405)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.createTransactionIfNecessary(TransactionAspectSupport.java:617)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:386)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy109.save(Unknown Source)
	at com.example.furbo.servicios.TeamService.loadTeamDetails(TeamService.java:111)
	at com.example.furbo.servicios.TeamService.loadAllTeams(TeamService.java:56)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:401)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:219)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:422)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1778)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1419)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.example.furbo.FurboApplication.main(FurboApplication.java:10)
2024-11-05 13:26:38.315611+01:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexi√≥n)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:690)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.message.DbException.get(DbException.java:188)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1425)
	at org.h2.jdbc.JdbcConnection.getWarnings(JdbcConnection.java:646)
	at com.zaxxer.hikari.pool.HikariProxyConnection.getWarnings(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.handleAndClearWarnings(SqlExceptionHelper.java:298)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logAndClearWarnings(SqlExceptionHelper.java:277)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.releaseConnection(LogicalConnectionManagedImpl.java:220)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.close(LogicalConnectionManagedImpl.java:258)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:161)
	at org.hibernate.internal.AbstractSharedSessionContract.close(AbstractSharedSessionContract.java:442)
	at org.hibernate.internal.SessionImpl.closeWithoutOpenChecks(SessionImpl.java:409)
	at org.hibernate.internal.SessionImpl.close(SessionImpl.java:391)
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:424)
	at org.springframework.orm.jpa.JpaTransactionManager.closeEntityManagerAfterFailedBegin(JpaTransactionManager.java:513)
	at org.springframework.orm.jpa.JpaTransactionManager.doBegin(JpaTransactionManager.java:465)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.startTransaction(AbstractPlatformTransactionManager.java:531)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:405)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.createTransactionIfNecessary(TransactionAspectSupport.java:617)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:386)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy109.save(Unknown Source)
	at com.example.furbo.servicios.TeamService.loadTeamDetails(TeamService.java:111)
	at com.example.furbo.servicios.TeamService.loadAllTeams(TeamService.java:56)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:401)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:219)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:422)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1778)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1419)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.example.furbo.FurboApplication.main(FurboApplication.java:10)
2024-11-05 13:26:38.316612+01:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexi√≥n)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:690)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.message.DbException.get(DbException.java:188)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1425)
	at org.h2.jdbc.JdbcConnection.clearWarnings(JdbcConnection.java:660)
	at com.zaxxer.hikari.pool.HikariProxyConnection.clearWarnings(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.handleAndClearWarnings(SqlExceptionHelper.java:307)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logAndClearWarnings(SqlExceptionHelper.java:277)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.releaseConnection(LogicalConnectionManagedImpl.java:220)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.close(LogicalConnectionManagedImpl.java:258)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:161)
	at org.hibernate.internal.AbstractSharedSessionContract.close(AbstractSharedSessionContract.java:442)
	at org.hibernate.internal.SessionImpl.closeWithoutOpenChecks(SessionImpl.java:409)
	at org.hibernate.internal.SessionImpl.close(SessionImpl.java:391)
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:424)
	at org.springframework.orm.jpa.JpaTransactionManager.closeEntityManagerAfterFailedBegin(JpaTransactionManager.java:513)
	at org.springframework.orm.jpa.JpaTransactionManager.doBegin(JpaTransactionManager.java:465)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.startTransaction(AbstractPlatformTransactionManager.java:531)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:405)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.createTransactionIfNecessary(TransactionAspectSupport.java:617)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:386)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy109.save(Unknown Source)
	at com.example.furbo.servicios.TeamService.loadTeamDetails(TeamService.java:111)
	at com.example.furbo.servicios.TeamService.loadAllTeams(TeamService.java:56)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:401)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:219)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:422)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1778)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1419)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.example.furbo.FurboApplication.main(FurboApplication.java:10)
2024-11-05 13:26:38.316612+01:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexi√≥n)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:690)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.message.DbException.get(DbException.java:188)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1425)
	at org.h2.jdbc.JdbcConnection.clearWarnings(JdbcConnection.java:660)
	at com.zaxxer.hikari.pool.ProxyConnection.close(ProxyConnection.java:257)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.closeConnection(DatasourceConnectionProviderImpl.java:127)
	at org.hibernate.internal.NonContextualJdbcConnectionAccess.releaseConnection(NonContextualJdbcConnectionAccess.java:64)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.releaseConnection(LogicalConnectionManagedImpl.java:224)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.close(LogicalConnectionManagedImpl.java:258)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:161)
	at org.hibernate.internal.AbstractSharedSessionContract.close(AbstractSharedSessionContract.java:442)
	at org.hibernate.internal.SessionImpl.closeWithoutOpenChecks(SessionImpl.java:409)
	at org.hibernate.internal.SessionImpl.close(SessionImpl.java:391)
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:424)
	at org.springframework.orm.jpa.JpaTransactionManager.closeEntityManagerAfterFailedBegin(JpaTransactionManager.java:513)
	at org.springframework.orm.jpa.JpaTransactionManager.doBegin(JpaTransactionManager.java:465)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.startTransaction(AbstractPlatformTransactionManager.java:531)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:405)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.createTransactionIfNecessary(TransactionAspectSupport.java:617)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:386)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy109.save(Unknown Source)
	at com.example.furbo.servicios.TeamService.loadTeamDetails(TeamService.java:111)
	at com.example.furbo.servicios.TeamService.loadAllTeams(TeamService.java:56)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:401)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:219)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:422)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1778)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1419)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.example.furbo.FurboApplication.main(FurboApplication.java:10)
2024-11-05 13:55:32.611702+01:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Error de Sintaxis en sentencia SQL "create table season (ref varchar(255) not null, abbreviation varchar(255), display_name varchar(255), end_date timestamp(6) with time zone, short_display_name varchar(255), start_date timestamp(6) with time zone, [*]year integer not null, primary key (ref))"; se esperaba "identifier"
Syntax error in SQL statement "create table season (ref varchar(255) not null, abbreviation varchar(255), display_name varchar(255), end_date timestamp(6) with time zone, short_display_name varchar(255), start_date timestamp(6) with time zone, [*]year integer not null, primary key (ref))"; expected "identifier"; SQL statement:
create table season (ref varchar(255) not null, abbreviation varchar(255), display_name varchar(255), end_date timestamp(6) with time zone, short_display_name varchar(255), start_date timestamp(6) with time zone, year integer not null, primary key (ref)) [42001-224]
2024-11-05 13:55:32.619210+01:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Constraint "PRIMARY KEY | UNIQUE (ID)" no encontrado
Constraint "PRIMARY KEY | UNIQUE (ID)" not found; SQL statement:
alter table if exists athletes add constraint FKcqryq7ljkbedycjy3ypqky16m foreign key (position_id) references positions (id) [90057-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:644)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.ddl.AlterTableAddConstraint.tryUpdate(AlterTableAddConstraint.java:259)
	at org.h2.command.ddl.AlterTableAddConstraint.update(AlterTableAddConstraint.java:74)
	at org.h2.command.ddl.AlterTable.update(AlterTable.java:46)
	at org.h2.command.CommandContainer.update(CommandContainer.java:169)
	at org.h2.command.Command.executeUpdate(Command.java:256)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:262)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:231)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:574)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:514)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applyForeignKeys(AbstractSchemaMigrator.java:446)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:268)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:286)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1833)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1234)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:952)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.example.furbo.FurboApplication.main(FurboApplication.java:10)
2024-11-05 13:55:32.623924+01:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "SEASON" no encontrada
Table "SEASON" not found; SQL statement:
alter table if exists season_athletes add constraint FKaknvogtat94b2tgomk100efn7 foreign key (season_ref) references season [42102-224]
2024-11-05 14:15:59.675363+01:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Error de Sintaxis en sentencia SQL "create table season (ref varchar(255) not null, abbreviation varchar(255), display_name varchar(255), end_date timestamp(6) with time zone, short_display_name varchar(255), start_date timestamp(6) with time zone, [*]year integer not null, primary key (ref))"; se esperaba "identifier"
Syntax error in SQL statement "create table season (ref varchar(255) not null, abbreviation varchar(255), display_name varchar(255), end_date timestamp(6) with time zone, short_display_name varchar(255), start_date timestamp(6) with time zone, [*]year integer not null, primary key (ref))"; expected "identifier"; SQL statement:
create table season (ref varchar(255) not null, abbreviation varchar(255), display_name varchar(255), end_date timestamp(6) with time zone, short_display_name varchar(255), start_date timestamp(6) with time zone, year integer not null, primary key (ref)) [42001-224]
2024-11-05 14:15:59.687870+01:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "SEASON" no encontrada
Table "SEASON" not found; SQL statement:
alter table if exists season_athletes add constraint FKaknvogtat94b2tgomk100efn7 foreign key (season_ref) references season [42102-224]
2024-11-05 14:20:52.848663+01:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Error de Sintaxis en sentencia SQL "create table season (ref varchar(255) not null, abbreviation varchar(255), display_name varchar(255), end_date timestamp(6) with time zone, short_display_name varchar(255), start_date timestamp(6) with time zone, [*]year integer not null, primary key (ref))"; se esperaba "identifier"
Syntax error in SQL statement "create table season (ref varchar(255) not null, abbreviation varchar(255), display_name varchar(255), end_date timestamp(6) with time zone, short_display_name varchar(255), start_date timestamp(6) with time zone, [*]year integer not null, primary key (ref))"; expected "identifier"; SQL statement:
create table season (ref varchar(255) not null, abbreviation varchar(255), display_name varchar(255), end_date timestamp(6) with time zone, short_display_name varchar(255), start_date timestamp(6) with time zone, year integer not null, primary key (ref)) [42001-224]
2024-11-05 14:20:52.859167+01:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "SEASON" no encontrada
Table "SEASON" not found; SQL statement:
alter table if exists season_athletes add constraint FKaknvogtat94b2tgomk100efn7 foreign key (season_ref) references season [42102-224]
2024-11-05 16:44:28.064013+01:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Error de Sintaxis en sentencia SQL "create table season (ref varchar(255) not null, abbreviation varchar(255), display_name varchar(255), end_date timestamp(6) with time zone, short_display_name varchar(255), start_date timestamp(6) with time zone, [*]year integer not null, league_id bigint, primary key (ref))"; se esperaba "identifier"
Syntax error in SQL statement "create table season (ref varchar(255) not null, abbreviation varchar(255), display_name varchar(255), end_date timestamp(6) with time zone, short_display_name varchar(255), start_date timestamp(6) with time zone, [*]year integer not null, league_id bigint, primary key (ref))"; expected "identifier"; SQL statement:
create table season (ref varchar(255) not null, abbreviation varchar(255), display_name varchar(255), end_date timestamp(6) with time zone, short_display_name varchar(255), start_date timestamp(6) with time zone, year integer not null, league_id bigint, primary key (ref)) [42001-224]
2024-11-05 16:44:28.080026+01:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "SEASON" no encontrada
Table "SEASON" not found; SQL statement:
alter table if exists season_athletes add constraint FKaknvogtat94b2tgomk100efn7 foreign key (season_ref) references season [42102-224]
2024-11-05 17:20:55.513643+01:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Error de Sintaxis en sentencia SQL "create table season (ref varchar(255) not null, abbreviation varchar(255), display_name varchar(255), end_date timestamp(6) with time zone, short_display_name varchar(255), start_date timestamp(6) with time zone, [*]year integer not null, league_id bigint, primary key (ref))"; se esperaba "identifier"
Syntax error in SQL statement "create table season (ref varchar(255) not null, abbreviation varchar(255), display_name varchar(255), end_date timestamp(6) with time zone, short_display_name varchar(255), start_date timestamp(6) with time zone, [*]year integer not null, league_id bigint, primary key (ref))"; expected "identifier"; SQL statement:
create table season (ref varchar(255) not null, abbreviation varchar(255), display_name varchar(255), end_date timestamp(6) with time zone, short_display_name varchar(255), start_date timestamp(6) with time zone, year integer not null, league_id bigint, primary key (ref)) [42001-224]
2024-11-05 17:20:55.524151+01:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "SEASON" no encontrada
Table "SEASON" not found; SQL statement:
alter table if exists season_athletes add constraint FKaknvogtat94b2tgomk100efn7 foreign key (season_ref) references season [42102-224]
2024-11-05 17:22:35.897335+01:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Error de Sintaxis en sentencia SQL "create table season (ref varchar(255) not null, abbreviation varchar(255), display_name varchar(255), end_date timestamp(6) with time zone, short_display_name varchar(255), start_date timestamp(6) with time zone, [*]year integer not null, league_id bigint, primary key (ref))"; se esperaba "identifier"
Syntax error in SQL statement "create table season (ref varchar(255) not null, abbreviation varchar(255), display_name varchar(255), end_date timestamp(6) with time zone, short_display_name varchar(255), start_date timestamp(6) with time zone, [*]year integer not null, league_id bigint, primary key (ref))"; expected "identifier"; SQL statement:
create table season (ref varchar(255) not null, abbreviation varchar(255), display_name varchar(255), end_date timestamp(6) with time zone, short_display_name varchar(255), start_date timestamp(6) with time zone, year integer not null, league_id bigint, primary key (ref)) [42001-224]
2024-11-05 17:22:35.906830+01:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "SEASON" no encontrada
Table "SEASON" not found; SQL statement:
alter table if exists season_athletes add constraint FKaknvogtat94b2tgomk100efn7 foreign key (season_ref) references season [42102-224]
2024-11-05 17:27:45.277915+01:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Error de Sintaxis en sentencia SQL "create table season (ref varchar(255) not null, abbreviation varchar(255), display_name varchar(255), end_date timestamp(6) with time zone, short_display_name varchar(255), start_date timestamp(6) with time zone, [*]year integer not null, league_id bigint, primary key (ref))"; se esperaba "identifier"
Syntax error in SQL statement "create table season (ref varchar(255) not null, abbreviation varchar(255), display_name varchar(255), end_date timestamp(6) with time zone, short_display_name varchar(255), start_date timestamp(6) with time zone, [*]year integer not null, league_id bigint, primary key (ref))"; expected "identifier"; SQL statement:
create table season (ref varchar(255) not null, abbreviation varchar(255), display_name varchar(255), end_date timestamp(6) with time zone, short_display_name varchar(255), start_date timestamp(6) with time zone, year integer not null, league_id bigint, primary key (ref)) [42001-224]
2024-11-05 17:27:45.287915+01:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "SEASON" no encontrada
Table "SEASON" not found; SQL statement:
alter table if exists season_athletes add constraint FKaknvogtat94b2tgomk100efn7 foreign key (season_ref) references season [42102-224]
2024-11-05 17:29:57.376342+01:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Error de Sintaxis en sentencia SQL "create table season (ref varchar(255) not null, abbreviation varchar(255), display_name varchar(255), end_date timestamp(6) with time zone, short_display_name varchar(255), start_date timestamp(6) with time zone, [*]year integer not null, league_id bigint, primary key (ref))"; se esperaba "identifier"
Syntax error in SQL statement "create table season (ref varchar(255) not null, abbreviation varchar(255), display_name varchar(255), end_date timestamp(6) with time zone, short_display_name varchar(255), start_date timestamp(6) with time zone, [*]year integer not null, league_id bigint, primary key (ref))"; expected "identifier"; SQL statement:
create table season (ref varchar(255) not null, abbreviation varchar(255), display_name varchar(255), end_date timestamp(6) with time zone, short_display_name varchar(255), start_date timestamp(6) with time zone, year integer not null, league_id bigint, primary key (ref)) [42001-224]
2024-11-05 17:29:57.385369+01:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "SEASON" no encontrada
Table "SEASON" not found; SQL statement:
alter table if exists season_athletes add constraint FKaknvogtat94b2tgomk100efn7 foreign key (season_ref) references season [42102-224]
2024-11-05 17:30:31.601599+01:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Error de Sintaxis en sentencia SQL "create table season (ref varchar(255) not null, abbreviation varchar(255), display_name varchar(255), end_date timestamp(6) with time zone, short_display_name varchar(255), start_date timestamp(6) with time zone, [*]year integer not null, league_id bigint, primary key (ref))"; se esperaba "identifier"
Syntax error in SQL statement "create table season (ref varchar(255) not null, abbreviation varchar(255), display_name varchar(255), end_date timestamp(6) with time zone, short_display_name varchar(255), start_date timestamp(6) with time zone, [*]year integer not null, league_id bigint, primary key (ref))"; expected "identifier"; SQL statement:
create table season (ref varchar(255) not null, abbreviation varchar(255), display_name varchar(255), end_date timestamp(6) with time zone, short_display_name varchar(255), start_date timestamp(6) with time zone, year integer not null, league_id bigint, primary key (ref)) [42001-224]
2024-11-05 17:30:31.611159+01:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "SEASON" no encontrada
Table "SEASON" not found; SQL statement:
alter table if exists season_athletes add constraint FKaknvogtat94b2tgomk100efn7 foreign key (season_ref) references season [42102-224]
2024-11-05 23:05:20.803066+01:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Error de Sintaxis en sentencia SQL "create table season (ref varchar(255) not null, abbreviation varchar(255), display_name varchar(255), end_date timestamp(6) with time zone, short_display_name varchar(255), start_date timestamp(6) with time zone, [*]year integer not null, league_id bigint, primary key (ref))"; se esperaba "identifier"
Syntax error in SQL statement "create table season (ref varchar(255) not null, abbreviation varchar(255), display_name varchar(255), end_date timestamp(6) with time zone, short_display_name varchar(255), start_date timestamp(6) with time zone, [*]year integer not null, league_id bigint, primary key (ref))"; expected "identifier"; SQL statement:
create table season (ref varchar(255) not null, abbreviation varchar(255), display_name varchar(255), end_date timestamp(6) with time zone, short_display_name varchar(255), start_date timestamp(6) with time zone, year integer not null, league_id bigint, primary key (ref)) [42001-224]
2024-11-05 23:05:20.814577+01:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "SEASON" no encontrada
Table "SEASON" not found; SQL statement:
alter table if exists season_athletes add constraint FKaknvogtat94b2tgomk100efn7 foreign key (season_ref) references season [42102-224]
2024-11-06 23:04:33.241513+01:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Error de Sintaxis en sentencia SQL "create table season (ref varchar(255) not null, abbreviation varchar(255), display_name varchar(255), end_date timestamp(6) with time zone, short_display_name varchar(255), start_date timestamp(6) with time zone, [*]year integer not null, league_id bigint, primary key (ref))"; se esperaba "identifier"
Syntax error in SQL statement "create table season (ref varchar(255) not null, abbreviation varchar(255), display_name varchar(255), end_date timestamp(6) with time zone, short_display_name varchar(255), start_date timestamp(6) with time zone, [*]year integer not null, league_id bigint, primary key (ref))"; expected "identifier"; SQL statement:
create table season (ref varchar(255) not null, abbreviation varchar(255), display_name varchar(255), end_date timestamp(6) with time zone, short_display_name varchar(255), start_date timestamp(6) with time zone, year integer not null, league_id bigint, primary key (ref)) [42001-224]
2024-11-06 23:04:33.254021+01:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "SEASON" no encontrada
Table "SEASON" not found; SQL statement:
alter table if exists season_athletes add constraint FKaknvogtat94b2tgomk100efn7 foreign key (season_ref) references season [42102-224]
2024-11-06 23:11:16.223021+01:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Error de Sintaxis en sentencia SQL "create table season (ref varchar(255) not null, abbreviation varchar(255), display_name varchar(255), end_date timestamp(6) with time zone, short_display_name varchar(255), start_date timestamp(6) with time zone, [*]year integer not null, league_id bigint, primary key (ref))"; se esperaba "identifier"
Syntax error in SQL statement "create table season (ref varchar(255) not null, abbreviation varchar(255), display_name varchar(255), end_date timestamp(6) with time zone, short_display_name varchar(255), start_date timestamp(6) with time zone, [*]year integer not null, league_id bigint, primary key (ref))"; expected "identifier"; SQL statement:
create table season (ref varchar(255) not null, abbreviation varchar(255), display_name varchar(255), end_date timestamp(6) with time zone, short_display_name varchar(255), start_date timestamp(6) with time zone, year integer not null, league_id bigint, primary key (ref)) [42001-224]
2024-11-06 23:11:16.236626+01:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "SEASON" no encontrada
Table "SEASON" not found; SQL statement:
alter table if exists season_athletes add constraint FKaknvogtat94b2tgomk100efn7 foreign key (season_ref) references season [42102-224]
2024-11-07 00:39:33.045058+01:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Error de Sintaxis en sentencia SQL "create table season (ref varchar(255) not null, abbreviation varchar(255), display_name varchar(255), end_date timestamp(6) with time zone, short_display_name varchar(255), start_date timestamp(6) with time zone, [*]year integer not null, league_id bigint, primary key (ref))"; se esperaba "identifier"
Syntax error in SQL statement "create table season (ref varchar(255) not null, abbreviation varchar(255), display_name varchar(255), end_date timestamp(6) with time zone, short_display_name varchar(255), start_date timestamp(6) with time zone, [*]year integer not null, league_id bigint, primary key (ref))"; expected "identifier"; SQL statement:
create table season (ref varchar(255) not null, abbreviation varchar(255), display_name varchar(255), end_date timestamp(6) with time zone, short_display_name varchar(255), start_date timestamp(6) with time zone, year integer not null, league_id bigint, primary key (ref)) [42001-224]
2024-11-07 00:39:33.058246+01:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "SEASON" no encontrada
Table "SEASON" not found; SQL statement:
alter table if exists season_athletes add constraint FKaknvogtat94b2tgomk100efn7 foreign key (season_ref) references season [42102-224]
2024-11-07 00:57:33.450525+01:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Error de Sintaxis en sentencia SQL "create table season (ref varchar(255) not null, abbreviation varchar(255), display_name varchar(255), end_date timestamp(6) with time zone, short_display_name varchar(255), start_date timestamp(6) with time zone, [*]year integer not null, league_id bigint, primary key (ref))"; se esperaba "identifier"
Syntax error in SQL statement "create table season (ref varchar(255) not null, abbreviation varchar(255), display_name varchar(255), end_date timestamp(6) with time zone, short_display_name varchar(255), start_date timestamp(6) with time zone, [*]year integer not null, league_id bigint, primary key (ref))"; expected "identifier"; SQL statement:
create table season (ref varchar(255) not null, abbreviation varchar(255), display_name varchar(255), end_date timestamp(6) with time zone, short_display_name varchar(255), start_date timestamp(6) with time zone, year integer not null, league_id bigint, primary key (ref)) [42001-224]
2024-11-07 00:57:33.459260+01:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "SEASON" no encontrada
Table "SEASON" not found; SQL statement:
alter table if exists season_athletes add constraint FKaknvogtat94b2tgomk100efn7 foreign key (season_ref) references season [42102-224]
2024-11-07 22:59:50.760195+01:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Error de Sintaxis en sentencia SQL "create table season (ref varchar(255) not null, abbreviation varchar(255), display_name varchar(255), end_date timestamp(6) with time zone, short_display_name varchar(255), start_date timestamp(6) with time zone, [*]year integer not null, league_id bigint, primary key (ref))"; se esperaba "identifier"
Syntax error in SQL statement "create table season (ref varchar(255) not null, abbreviation varchar(255), display_name varchar(255), end_date timestamp(6) with time zone, short_display_name varchar(255), start_date timestamp(6) with time zone, [*]year integer not null, league_id bigint, primary key (ref))"; expected "identifier"; SQL statement:
create table season (ref varchar(255) not null, abbreviation varchar(255), display_name varchar(255), end_date timestamp(6) with time zone, short_display_name varchar(255), start_date timestamp(6) with time zone, year integer not null, league_id bigint, primary key (ref)) [42001-224]
2024-11-07 22:59:50.770712+01:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "SEASON" no encontrada
Table "SEASON" not found; SQL statement:
alter table if exists season_athletes add constraint FKaknvogtat94b2tgomk100efn7 foreign key (season_ref) references season [42102-224]
2024-11-07 23:38:40.744349+01:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Error de Sintaxis en sentencia SQL "create table season (ref varchar(255) not null, abbreviation varchar(255), display_name varchar(255), end_date timestamp(6) with time zone, short_display_name varchar(255), start_date timestamp(6) with time zone, [*]year integer not null, league_id bigint, primary key (ref))"; se esperaba "identifier"
Syntax error in SQL statement "create table season (ref varchar(255) not null, abbreviation varchar(255), display_name varchar(255), end_date timestamp(6) with time zone, short_display_name varchar(255), start_date timestamp(6) with time zone, [*]year integer not null, league_id bigint, primary key (ref))"; expected "identifier"; SQL statement:
create table season (ref varchar(255) not null, abbreviation varchar(255), display_name varchar(255), end_date timestamp(6) with time zone, short_display_name varchar(255), start_date timestamp(6) with time zone, year integer not null, league_id bigint, primary key (ref)) [42001-224]
2024-11-07 23:38:40.753349+01:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "SEASON" no encontrada
Table "SEASON" not found; SQL statement:
alter table if exists season_athletes add constraint FKaknvogtat94b2tgomk100efn7 foreign key (season_ref) references season [42102-224]
2024-11-07 23:44:53.731397+01:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Error de Sintaxis en sentencia SQL "create table season (ref varchar(255) not null, abbreviation varchar(255), display_name varchar(255), end_date timestamp(6) with time zone, short_display_name varchar(255), start_date timestamp(6) with time zone, [*]year integer not null, league_id bigint, primary key (ref))"; se esperaba "identifier"
Syntax error in SQL statement "create table season (ref varchar(255) not null, abbreviation varchar(255), display_name varchar(255), end_date timestamp(6) with time zone, short_display_name varchar(255), start_date timestamp(6) with time zone, [*]year integer not null, league_id bigint, primary key (ref))"; expected "identifier"; SQL statement:
create table season (ref varchar(255) not null, abbreviation varchar(255), display_name varchar(255), end_date timestamp(6) with time zone, short_display_name varchar(255), start_date timestamp(6) with time zone, year integer not null, league_id bigint, primary key (ref)) [42001-224]
2024-11-07 23:44:53.739904+01:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "SEASON" no encontrada
Table "SEASON" not found; SQL statement:
alter table if exists season_athletes add constraint FKaknvogtat94b2tgomk100efn7 foreign key (season_ref) references season [42102-224]
2024-11-08 00:24:10.669813+01:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Error de Sintaxis en sentencia SQL "create table season (ref varchar(255) not null, abbreviation varchar(255), display_name varchar(255), end_date timestamp(6) with time zone, short_display_name varchar(255), start_date timestamp(6) with time zone, [*]year integer not null, league_id bigint, primary key (ref))"; se esperaba "identifier"
Syntax error in SQL statement "create table season (ref varchar(255) not null, abbreviation varchar(255), display_name varchar(255), end_date timestamp(6) with time zone, short_display_name varchar(255), start_date timestamp(6) with time zone, [*]year integer not null, league_id bigint, primary key (ref))"; expected "identifier"; SQL statement:
create table season (ref varchar(255) not null, abbreviation varchar(255), display_name varchar(255), end_date timestamp(6) with time zone, short_display_name varchar(255), start_date timestamp(6) with time zone, year integer not null, league_id bigint, primary key (ref)) [42001-224]
2024-11-08 00:24:10.681320+01:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "SEASON" no encontrada
Table "SEASON" not found; SQL statement:
alter table if exists season_athletes add constraint FKaknvogtat94b2tgomk100efn7 foreign key (season_ref) references season [42102-224]
2024-11-09 01:19:54.897587+01:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Error de Sintaxis en sentencia SQL "create table season (ref varchar(255) not null, abbreviation varchar(255), display_name varchar(255), end_date timestamp(6) with time zone, short_display_name varchar(255), start_date timestamp(6) with time zone, [*]year integer not null, league_id bigint, primary key (ref))"; se esperaba "identifier"
Syntax error in SQL statement "create table season (ref varchar(255) not null, abbreviation varchar(255), display_name varchar(255), end_date timestamp(6) with time zone, short_display_name varchar(255), start_date timestamp(6) with time zone, [*]year integer not null, league_id bigint, primary key (ref))"; expected "identifier"; SQL statement:
create table season (ref varchar(255) not null, abbreviation varchar(255), display_name varchar(255), end_date timestamp(6) with time zone, short_display_name varchar(255), start_date timestamp(6) with time zone, year integer not null, league_id bigint, primary key (ref)) [42001-224]
2024-11-09 01:19:54.906590+01:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "SEASON" no encontrada
Table "SEASON" not found; SQL statement:
alter table if exists season_athletes add constraint FKaknvogtat94b2tgomk100efn7 foreign key (season_ref) references season [42102-224]
2024-11-09 01:58:01.908233+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
SELECT COUNT(*) FROM country [42102-224]
2024-11-09 02:02:03.292330+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
SELECT COUNT(*) FROM country [42102-224]
2024-11-09 02:03:39.337418+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:39.589273+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:39.836102+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:40.096191+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:40.351808+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:40.611264+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:40.866364+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:41.115211+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:41.372023+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:41.624676+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:41.872801+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:42.123218+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:42.372071+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:42.619451+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:42.881711+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:43.128928+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:43.386929+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:43.635398+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:43.890346+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:44.145384+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:44.405837+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:44.656336+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:44.904656+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:45.154955+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:45.403882+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:45.948971+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:46.198916+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:46.449205+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:46.699139+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:46.954140+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:47.201037+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:47.454725+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:47.704360+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:47.955253+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:48.204777+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:48.452674+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:48.701547+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:48.950820+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:49.202158+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:49.451917+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:49.701207+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:49.952004+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:50.205405+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:50.452867+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:50.700806+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:50.954169+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:51.203817+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:51.455367+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:51.701516+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:51.947863+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:52.494855+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:52.744988+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:52.996804+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:53.243847+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:53.495610+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:53.747594+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:54.010491+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:54.259234+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:54.509863+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:54.757695+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:55.006541+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:55.256374+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:55.513025+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:55.763697+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:56.014828+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:56.267231+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:56.517169+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:56.763452+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:57.010297+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:57.259539+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:57.506594+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:57.755089+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:58.005672+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:58.253413+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:58.499964+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:59.154170+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:59.404207+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:59.651473+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:03:59.900828+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:00.150024+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:00.397270+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:00.647688+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:00.894197+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:01.141516+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:01.388989+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:01.637174+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:01.886684+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:02.134837+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:02.384111+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:02.631177+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:02.878227+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:03.130925+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:03.381180+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:03.632674+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:03.879981+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:04.130475+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:04.379652+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:04.628893+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:04.878864+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:05.125867+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:05.662808+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:05.910200+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:06.159835+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:06.414704+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:06.662353+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:06.918798+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:07.168198+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:07.417350+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:07.666400+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:07.916329+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:08.162809+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:08.413540+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:08.666843+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:08.917505+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:09.169402+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:09.417620+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:09.666793+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:09.915183+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:10.164748+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:10.413313+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:10.663716+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:10.911747+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:11.164485+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:11.415704+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:11.664184+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:12.171452+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:12.421035+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:12.668759+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:12.919668+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:13.172744+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:13.419966+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:13.678374+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:13.932431+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:14.184017+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:14.431142+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:14.702263+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:14.969468+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:15.225638+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:15.476714+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:15.729675+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:15.977872+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:16.228576+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:16.477150+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:16.727635+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:16.976799+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:17.225237+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:17.474798+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:17.729827+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:17.980156+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:18.226822+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:18.782396+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:19.030932+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:19.278398+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:19.532176+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:19.779902+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:20.028426+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:20.275512+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:20.523466+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:20.774269+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:21.023693+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:21.271330+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:21.521028+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:21.768728+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:22.015979+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:22.262902+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:22.513932+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:22.761903+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:23.013443+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:23.259811+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:23.506345+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:23.752399+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:24.007579+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:24.257896+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:24.506924+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:24.752594+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:25.423020+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:25.673342+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:25.921157+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:04:26.170415+01:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "COUNTRY" no encontrada
Table "COUNTRY" not found; SQL statement:
INSERT INTO country (id, slug, name, abbreviation, flag_href) VALUES (?, ?, ?, ?, ?) [42102-224]
2024-11-09 02:13:10.984274+01:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Error de Sintaxis en sentencia SQL "create table season (ref varchar(255) not null, abbreviation varchar(255), display_name varchar(255), end_date timestamp(6) with time zone, short_display_name varchar(255), start_date timestamp(6) with time zone, [*]year integer not null, league_id bigint, primary key (ref))"; se esperaba "identifier"
Syntax error in SQL statement "create table season (ref varchar(255) not null, abbreviation varchar(255), display_name varchar(255), end_date timestamp(6) with time zone, short_display_name varchar(255), start_date timestamp(6) with time zone, [*]year integer not null, league_id bigint, primary key (ref))"; expected "identifier"; SQL statement:
create table season (ref varchar(255) not null, abbreviation varchar(255), display_name varchar(255), end_date timestamp(6) with time zone, short_display_name varchar(255), start_date timestamp(6) with time zone, year integer not null, league_id bigint, primary key (ref)) [42001-224]
2024-11-09 02:13:10.995784+01:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "SEASON" no encontrada
Table "SEASON" not found; SQL statement:
alter table if exists season_athletes add constraint FKaknvogtat94b2tgomk100efn7 foreign key (season_ref) references season [42102-224]
2024-11-09 02:16:07.206055+01:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Error de Sintaxis en sentencia SQL "create table season (ref varchar(255) not null, abbreviation varchar(255), display_name varchar(255), end_date timestamp(6) with time zone, short_display_name varchar(255), start_date timestamp(6) with time zone, [*]year integer not null, league_id bigint, primary key (ref))"; se esperaba "identifier"
Syntax error in SQL statement "create table season (ref varchar(255) not null, abbreviation varchar(255), display_name varchar(255), end_date timestamp(6) with time zone, short_display_name varchar(255), start_date timestamp(6) with time zone, [*]year integer not null, league_id bigint, primary key (ref))"; expected "identifier"; SQL statement:
create table season (ref varchar(255) not null, abbreviation varchar(255), display_name varchar(255), end_date timestamp(6) with time zone, short_display_name varchar(255), start_date timestamp(6) with time zone, year integer not null, league_id bigint, primary key (ref)) [42001-224]
2024-11-09 02:16:07.215566+01:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "SEASON" no encontrada
Table "SEASON" not found; SQL statement:
alter table if exists season_athletes add constraint FKaknvogtat94b2tgomk100efn7 foreign key (season_ref) references season [42102-224]
2024-11-09 02:19:13.211224+01:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Error de Sintaxis en sentencia SQL "create table season (ref varchar(255) not null, abbreviation varchar(255), display_name varchar(255), end_date timestamp(6) with time zone, short_display_name varchar(255), start_date timestamp(6) with time zone, [*]year integer not null, league_id bigint, primary key (ref))"; se esperaba "identifier"
Syntax error in SQL statement "create table season (ref varchar(255) not null, abbreviation varchar(255), display_name varchar(255), end_date timestamp(6) with time zone, short_display_name varchar(255), start_date timestamp(6) with time zone, [*]year integer not null, league_id bigint, primary key (ref))"; expected "identifier"; SQL statement:
create table season (ref varchar(255) not null, abbreviation varchar(255), display_name varchar(255), end_date timestamp(6) with time zone, short_display_name varchar(255), start_date timestamp(6) with time zone, year integer not null, league_id bigint, primary key (ref)) [42001-224]
2024-11-09 02:19:13.220730+01:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "SEASON" no encontrada
Table "SEASON" not found; SQL statement:
alter table if exists season_athletes add constraint FKaknvogtat94b2tgomk100efn7 foreign key (season_ref) references season [42102-224]
2024-11-10 21:15:05.093052+01:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Error de Sintaxis en sentencia SQL "create table season (ref varchar(255) not null, abbreviation varchar(255), display_name varchar(255), end_date timestamp(6) with time zone, short_display_name varchar(255), start_date timestamp(6) with time zone, [*]year integer not null, league_id bigint, primary key (ref))"; se esperaba "identifier"
Syntax error in SQL statement "create table season (ref varchar(255) not null, abbreviation varchar(255), display_name varchar(255), end_date timestamp(6) with time zone, short_display_name varchar(255), start_date timestamp(6) with time zone, [*]year integer not null, league_id bigint, primary key (ref))"; expected "identifier"; SQL statement:
create table season (ref varchar(255) not null, abbreviation varchar(255), display_name varchar(255), end_date timestamp(6) with time zone, short_display_name varchar(255), start_date timestamp(6) with time zone, year integer not null, league_id bigint, primary key (ref)) [42001-224]
2024-11-10 21:15:05.103052+01:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "SEASON" no encontrada
Table "SEASON" not found; SQL statement:
alter table if exists season_athletes add constraint FKaknvogtat94b2tgomk100efn7 foreign key (season_ref) references season [42102-224]
2024-11-10 23:12:38.399793+01:00 jdbc[45]: null
org.h2.message.DbException: La conexi√≥n no fue cerrada por la aplicaci√≥n y esta siendo limpiada (garbage collected)
The connection was not closed by the application and is garbage collected [90018-224]
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.message.DbException.get(DbException.java:188)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:218)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:135)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:733)
	at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:712)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: La conexi√≥n no fue cerrada por la aplicaci√≥n y esta siendo limpiada (garbage collected)
The connection was not closed by the application and is garbage collected [90018-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:690)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	... 16 more
2024-11-10 23:18:37.916185+01:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Error de Sintaxis en sentencia SQL "create table season (ref varchar(255) not null, abbreviation varchar(255), display_name varchar(255), end_date timestamp(6) with time zone, short_display_name varchar(255), start_date timestamp(6) with time zone, [*]year integer not null, league_id bigint, primary key (ref))"; se esperaba "identifier"
Syntax error in SQL statement "create table season (ref varchar(255) not null, abbreviation varchar(255), display_name varchar(255), end_date timestamp(6) with time zone, short_display_name varchar(255), start_date timestamp(6) with time zone, [*]year integer not null, league_id bigint, primary key (ref))"; expected "identifier"; SQL statement:
create table season (ref varchar(255) not null, abbreviation varchar(255), display_name varchar(255), end_date timestamp(6) with time zone, short_display_name varchar(255), start_date timestamp(6) with time zone, year integer not null, league_id bigint, primary key (ref)) [42001-224]
2024-11-10 23:18:37.925184+01:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "SEASON" no encontrada
Table "SEASON" not found; SQL statement:
alter table if exists season_athletes add constraint FKaknvogtat94b2tgomk100efn7 foreign key (season_ref) references season [42102-224]
